{
  "swagger": "2.0",
  "info": {
    "description": "Products API using Mongo/Express",
    "version": "1.0.0",
    "title": "Products API"
  },
  "host": "damp-river-99300.herokuapp.com",
  "basePath": "/api",
  "tags": [
    {
      "name": "products",
      "description": "Everything about your Products"
    }
  ],
  "schemes": ["https", "http"],
  "paths": {
    "/products": {
      "post": {
        "tags": ["products"],
        "summary": "Add a new product to the store",
        "description": "",
        "operationId": "addProduct",
        "consumes": ["application/json", "application/xml"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Product object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "tags": ["products"],
        "summary": "Get a list of all products",
        "description": "",
        "operationId": "getProduct",
        "consumes": ["application/json", "application/xml"],
        "produces": ["application/xml", "application/json"],
        "responses": {
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/products/{productId}": {
      "get": {
        "tags": ["products"],
        "summary": "Get a product by id",
        "description": "",
        "operationId": "getProductById",
        "consumes": ["application/json", "application/xml"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID of the product to return",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "put": {
        "tags": ["products"],
        "summary": "Update an existing product",
        "description": "",
        "operationId": "updateProduct",
        "consumes": ["application/json", "application/xml"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID of the product to return",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Product object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid request"
          }
        }
      },
      "delete": {
        "tags": ["products"],
        "summary": "Deletes a product",
        "description": "",
        "operationId": "deleteProduct",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID of the product to return",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Product Deleted"
          }
        }
      }
    }
  },
  "definitions": {
    "Product": {
      "type": "object",
      "required": ["name", "photoUrls"],
      "properties": {
        "product": {
          "type": "string",
          "example": "Snowboard"
        },
        "category": {
          "type": "string",
          "example": "Sports"
        },
        "price": {
          "type": "number",
          "example": "249.99"
        }
      },
      "xml": {
        "name": "Pet"
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}
